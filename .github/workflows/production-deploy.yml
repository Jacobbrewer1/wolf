name: Production Deploy

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  release:
    types:
      - published

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

# We only want one build to run at a time for each branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    # Only run if release triggered the workflow
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions: write-all

    steps:
      - name: "Configure git for private repositories"
        run: git config --global url."https://x:${{ secrets.GITHUB_TOKEN }}@github.com".insteadOf "https://github.com"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          repository: Jacobbrewer1/probuild-supporting-charts
          path: ./
          token: ${{ secrets.REPO_PAT }}

      - name: Set outputs
        id: vars_deploy
        run: |
          echo "sha_short_deploy=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate image tag
        id: image_tag
        run: |
          # If release then use the tag, otherwise use the branch and commit sha
          echo "image_tag=${GITHUB_REF#refs/heads/}_${{ steps.vars_deploy.outputs.sha_short_deploy }}" >> $GITHUB_OUTPUT

      - name: Curl command to add annotation to Grafana
        id: wolf_annotation
        run: |
          # Create annotation          
          curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.GRAFANA_TOKEN }}" -d '{"text":"RC: ${{ steps.image_tag.outputs.image_tag }}","dashboardUID":"${{ secrets.GRAFANA_DASHBOARD_UID }}","tags":["${{ steps.image_tag.outputs.image_tag }}"]}' ${{ secrets.GRAFANA_URL }}/api/annotations

      - name: Helm install
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade --install wolf ./charts/wolf --set image.tag=${{ steps.image_tag.outputs.image_tag }} --set wolf.commitSha="${{ steps.vars_deploy.outputs.sha_short_deploy }}"
          kubeconfig: '${{ secrets.KUBE_CONFIG }}'
