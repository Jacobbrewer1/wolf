name: Build and Deploy

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  release:
    types:
      - published

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20.1

      - name: Build binary
        run: |
          cd ./cmd/bot
          go mod tidy
          go build -o wolf

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set outputs
        id: vars_deploy
        run: |
          echo "sha_short_deploy=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
          
          echo "branch=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate image tag
        id: image_tag
        run: |
          # If release then use the tag, otherwise use the branch and commit sha
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "image_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "image_tag=${GITHUB_REF#refs/heads/}_${{ steps.vars_deploy.outputs.sha_short_deploy }}" >> $GITHUB_OUTPUT
          fi

      - name: Docker build
        run: |
          cd ./cmd/bot
          docker build . -t ${{ env.REGISTRY }}/jacobbrewer1/wolf:${{ steps.image_tag.outputs.image_tag }}

      - name: Docker push
        if: ${{ github.event_name != 'pull_request' }}
        run: docker push ${{ env.REGISTRY }}/jacobbrewer1/wolf:${{ steps.image_tag.outputs.image_tag }}

  deploy:
    # Only run if release triggered the workflow
    if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
    needs:
      - build
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    permissions: write-all

    steps:
      - name: "Configure git for private repositories"
        run: git config --global url."https://x:${{ secrets.GITHUB_TOKEN }}@github.com".insteadOf "https://github.com"

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
          repository: Jacobbrewer1/supporting-charts
          path: ./
          token: ${{ secrets.REPO_PAT }}

      - name: Set outputs
        id: vars_deploy
        run: |
          echo "sha_short_deploy=$(git rev-parse --short ${{ github.sha }})" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Generate image tag
        id: image_tag
        run: |
          # If release then use the tag, otherwise use the branch and commit sha
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "image_tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "image_tag=${GITHUB_REF#refs/heads/}_${{ steps.vars_deploy.outputs.sha_short_deploy }}" >> $GITHUB_OUTPUT
          fi

      - name: Curl command to add annotation to Grafana
        id: wolf_annotation
        run: |
          # Create annotation          
          curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer ${{ secrets.GRAFANA_TOKEN }}" -d '{"text":"RC: ${{ steps.image_tag.outputs.image_tag }}","dashboardUID":"${{ secrets.GRAFANA_DASHBOARD_UID }}","tags":["wolf","${{ steps.image_tag.outputs.image_tag }}"]}' ${{ secrets.GRAFANA_URL }}/api/annotations

      - name: Helm install
        uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade --install wolf ./charts/wolf --set image.tag=${{ steps.image_tag.outputs.image_tag }} --set wolf.commitSha="${{ steps.vars_deploy.outputs.sha_short_deploy }}"
          kubeconfig: '${{ secrets.KUBE_CONFIG }}'
